(()=>{"use strict";class e{constructor(e){this.name=e,this.objectives=[]}getName(){return this.name}getObjectives(){return this.objectives}setObjectives(e){this.objectives=e}getObjective(e){return this.objectives.find((t=>t.getName()===e))}addObjective(e){this.objectives.find((t=>t.getName()===e.name))||this.objectives.push(e)}deleteObjective(e){let t=this.objectives.find((t=>t.getName()===e));this.objectives.splice(this.objectives.indexOf(t),1)}}class t{constructor(e,t,s){this.name=e,this.description=t,this.dueDate=s}getName(){return this.name}setName(e){this.name=e}getDescription(){return this.description}setDescription(e){this.description=e}getDueDate(){return this.dueDate}}class s{constructor(){this.missions=[],this.missions.push(new e("Today")),this.missions.push(new e("This Week"))}setMissions(e){this.missions=e}getMissions(){return this.missions}getMission(e){return this.missions.find((t=>t.getName()===e))}addMission(e){this.missions.find((t=>t.getName()===e.name))||this.missions.push(e)}deleteMission(e){let t=this.missions.find((t=>t.getName()===e));this.missions.splice(this.missions.indexOf(t),1)}}class i{saveQuestMenu(e){localStorage.setItem("questmenu",JSON.stringify(e))}getQuestMenu(){const i=Object.assign(new s,JSON.parse(localStorage.getItem("questmenu")));return i.setMissions(i.getMissions().map((t=>Object.assign(new e,t)))),i.getMissions().forEach((e=>e.setObjectives(e.getObjectives().map((e=>Object.assign(new t,e)))))),i}addMission(e){const t=this.getQuestMenu();t.addMission(e),this.saveQuestMenu(t)}deleteMission(e){const t=this.getQuestMenu();t.deleteMission(e),this.saveQuestMenu(t)}addObjective(e,t){const s=this.getQuestMenu();s.getMission(e).addObjective(t),this.saveQuestMenu(s)}deleteObjective(e,t){const s=this.getQuestMenu();s.getMission(e).deleteObjective(t),this.saveQuestMenu(s)}renameObjective(e,t,s){const i=this.getQuestMenu();i.getMission(e).getObjective(t).setName(s),this.saveQuestMenu(i)}}(()=>{document.querySelector(".main");const s=new i;new e("Testing mission");let n=new e("Trying");s.addMission(n);let o=new t("Testing objective","this is for testing"),c=new t("Test for Today","todaaaay");s.addObjective("Today",o),s.addObjective("Today",c);let a=new t("Trying empty message","testing");s.addObjective("Trying",a);const d=document.querySelector(".missions"),u=document.querySelector(".objectives"),m=document.querySelector(".empty-obj-message");function r(e){const t=document.createElement("li");t.classList.add("mission"),t.setAttribute("role","button");const s=document.createElement("h3");return s.textContent=e.getName(),t.addEventListener("click",(()=>{!function(e){u.textContent="";let t=e.getObjectives();0!==t.length?m.style.display="none":m.style.display="block";for(let e of t)u.appendChild(l(e))}(e)})),t.appendChild(s),t}function l(e){const t=document.createElement("li");t.classList.add("objective");const s=document.createElement("h4");return s.textContent=e.getName(),t.appendChild(s),t}document.getElementById("add-mission"),document.getElementById("add-objective"),function(){!function(){let e=s.getQuestMenu().missions;for(let t of e)d.appendChild(r(t))}();let e=s.getQuestMenu().getMission("Today").getObjectives();for(let t of e)u.appendChild(l(t))}(),console.log(s.getQuestMenu().missions)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,